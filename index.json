[{"content":"- DISCOURSE_DB_PASSWORD=你自定义的数据库密码 - DISCOURSE_DEVELOPER_EMAILS=管理员的邮箱地址 - DISCOURSE_HOSTNAME=为社区准备的域名，如果希望使用Rainbond默认为80端口生成的域名，这个值设置为 ${DOMAIN} - DISCOURSE_SMTP_ADDRESS=可用的smtp服务器 - DISCOURSE_SMTP_PORT=smtp服务器的端口 - DISCOURSE_SMTP_USER_NAME=smtp账户 - DISCOURSE_SMTP_PASSWORD=smtp账户的密码 配置：\nUNICORN_WORKERS（如果是1Gb内存就是2，2GB内存以上就是3-4） DISCOURSE_DEVELOPER_EMAILS管理员邮箱 ??@qq.com DISCOURSE_HOSTNAME 绑定的域名 bbs.varn.cn DISCOURSE_SMTP_ADDRESS是邮局服务器 smtp.qq.com DISCOURSE_SMTP_PORT是SMTP的端口 587 DISCOURSE_SMTP_USER_NAME账号 ??@qq.com DISCOURSE_SMTP_PASSWORD密码 ?? Hostname : bbs.varn.cn Email : ??@qq.com SMTP address : smtp.qq.com SMTP port : 587 SMTP username : ??@qq.com SMTP password : ?? Notification email: noreply@bbs.varn.cn、??@qq.com Maxmind license: (unset) 整理自网络\n","permalink":"https://varn.cn/tech/discourse%E8%AE%BA%E5%9D%9B%E5%AE%89%E8%A3%85%E6%97%B6%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/","summary":"- DISCOURSE_DB_PASSWORD=你自定义的数据库密码 - DISCOURSE_DEVELOPER_EMAILS=管理员的邮箱地址 -","title":"Discourse论坛安装时的环境变量配置"},{"content":"locate: command not found错误，表示locate找不到，也就是没有安装mlocate这个包。 比如： 输入命令: locate 1.log 结果返回: -bash: locate: command not found 需要安装mlocate包，使用命令安装mlocate包: yum -y install mlocate 再次尝试，输入: locate 1.log 还是报错，错误内容为 :\nlocate: can not stat () /var/lib/mlocate/mlocate.db : No such file or directory 原因是安装完后没有更新库，需要使用updatedb命令来更新库后即可: updatedb\n搜狗指南——生活技能宝典 (sogou.com)\n","permalink":"https://varn.cn/tech/%E6%8F%90%E7%A4%BA..bash..locate..command..not..found%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","summary":"locate: command not found错误，表示locate找不到，也就是没有安装mlocate这个包。 比如： 输入命令: locate 1.log 结果返回: -bash: locate: command not found 需要安装mloca","title":"提示..bash..locate..command..not..found的解决方案"},{"content":"更新：\n1 yum update -y 安装Git：\n1 yum install git -y 安装netcat：\n1 yum install nc -y 安装docker并启动：\n1 yum install -y yum-utils 1 2 3 yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo 1 yum install docker-ce docker-ce-cli containerd.io -y 启动docker：\n1 systemctl start docker 查看docker版本，说明启动成功： docker -v\n获取discourse源码仓库，填写邮箱SMTP等配置信息：\n1 git clone https://github.com/discourse/discourse_docker.git /var/discourse 到文件夹目录并安装：\n1 cd /var/discourse 1 ./discourse-setup 正常情况填写相关信息即可。 或者修改配置重新构建： 到安装目录下修改配置：\ncd discourse/containers vi app.yml 重新构建： ./launcher rebuild app\n等待一段时间即可进入网页进行论坛初始化。\n另： 如何重启discourse：\n1 2 3 cd /var/discourse ./launcher enter app sv restart unicorn ./launcher enter app 是进入 docker 容器的命令，在容器内执行。\n给热心老哥搭个窝，2021年30分钟用Discourse搭建新一代BBS论坛站全攻略 – V2方圆 (v2fy.com) 整理自网络\n","permalink":"https://varn.cn/tech/centos7.6%E5%AE%89%E8%A3%85discourse%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F/","summary":"更新： 1 yum update -y 安装Git： 1 yum install git -y 安装netcat： 1 yum install nc -y 安装docker并启动： 1 yum install -y yum-utils 1 2 3 yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo 1 yum install docker-ce docker-ce-cli containerd.io -y 启动dock","title":"Centos7.6安装discourse论坛系统"},{"content":"使用：\nimport datetime date=datetime.now() #创建一个datetime类对象 datetime.day,datetime.month,datetime.year 分别表示一个datetime对象的日，月，年；\nstrftime() 用来格式化datetime 对象，datetime.strftime('%' ) %后面跟一个控制字符，如：\ndatetime.datetime.now().strftime(\u0026quot;%Y-%m-%d %H:%M:%S\u0026quot;) strftime()函数参数:\n%y 两位数的年份表示（00-99） %Y 四位数的年份表示（000-9999） %m 月份（01-12） %d 月内中的一天（0-31） %H 24小时制小时数（0-23） %I 12小时制小时数（01-12） %M 分钟数（00=59） %S 秒（00-59） %a 本地简化星期名称 %A 本地完整星期名称 %b 本地简化的月份名称 %B 本地完整的月份名称 %c 本地相应的日期表示和时间表示 %j 年内的一天（001-366） %p 本地A.M.或P.M.的等价符 %U 一年中的星期数（00-53）星期天为星期的开始 %w 星期（0-6），星期天为星期的开始 %W 一年中的星期数（00-53）星期一为星期的开始 %x 本地相应的日期表示 %X 本地相应的时间表示 %Z 当前时区的名称 %% %号本身 整理自CSDN\n","permalink":"https://varn.cn/tech/python%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96/","summary":"使用： import datetime date=datetime.now() #创建一个datetime类对象 datetime.day,datetime.month,datetime.year 分别表示一个datetime对象的日，月，年； strftime() 用来格式化datetime 对象，datetim","title":"Python时间格式化"},{"content":"1.创建2G的空间 dd if=/dev/zero of=/var/swap bs=1024 count=2048000 if 表示infile，of表示outfile，bs=1024代表增加的模块大小，count=2048000代表2048000个模块，也就是2G空间\n2.将目标文件设置为swap分区文件 mkswap /var/swap 3.激活swap，立即启用交换分区文件 mkswap -f /var/swap 查看当前swap大小： free -m free -m查看swap已经增加了，但这只是临时性的，如果机器重启会失效\n编辑： vi /etc/fstab 最后一行添加： /var/swap swap swap defaults 0 0 重启或free -m测试 swap添加成功： free -m 如果不再需要swap，可以清理该分区： swapoff /var/swap linux centos 如何设置swap大小？ - 大自然的流风 - 博客园 (cnblogs.com)\n如有报错，可尝试如下教程： 1.先用free -m查看一下swap的大小 2. 使用dd命令创建/home/swap这么一个分区文件。文件的大小是512000个block，一般情况下1个block为1K，所以这里空间是512M。(根据需要自行设定，比如2G：2048000)：\ndd if=/dev/zero of=/home/swap bs=1024 count=512000 3.接着再把这个分区变成swap分区：\n/sbin/mkswap /home/swap 4.再接着使用这个swap分区。使其成为有效状态：\n/sbin/swapon /home/swap 现在再用free -m命令查看一下内存和swap分区大小，就发现增加了512M的空间了。 注意当计算机重启了以后，发现swap还是原来那么大，新的swap没有自动启动，还要手动启动。那我们需要修改/etc/fstab文件，增加如下一行：\nvi /etc/fstab /home/swap swap swap defaults 0 0 Centos7中添加、删除Swap交换分区的方法 - 腾讯云开发者社区-腾讯云 (tencent.com)\n","permalink":"https://varn.cn/tech/centos7.6%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEswap%E7%9A%84%E5%A4%A7%E5%B0%8F/","summary":"1.创建2G的空间 dd if=/dev/zero of=/var/swap bs=1024 count=2048000 if 表示infile，of表示outfile，bs=1024代表增加的模块大小，count=2048000代表20","title":"Centos7.6如何设置swap的大小"},{"content":"\r","permalink":"https://varn.cn/pic/mountains-190055/","summary":"","title":""},{"content":" 我们首先找出我们想使之满意的那些人，我要用一个宽泛的词“测试利益相关者”来指代这些人。这个词包括但不仅限于测试参与者，包括但不仅限于项目参与者，甚至还包括但不仅限于我们为之测试的组织的所有成员。所有与我们做的测试和最终成果的质量相关的人，最终都是测试利益相关者。\n我们可以把利益相关者分成外部利益相关者和内部利益相关者两类，我们可以任意划分外部利益相关者和内部利益相关者界限，但让我们选个明显的吧∶内部利益相关者就是执行、领导、管理测试工作的那些人，外部利益相关者就是其他所有利益相关者。如此说来，谁是这些利益相关者呢?答案随着不同项目、不同产品、不同组织而不同。不过，有些答案是很典型的，从最明显的利益相关者（那些我们日常共事的人）到那些可能稍微不那么明显但一样重要的利益相关者（那些最终满意该做的测试都完成了的人）∶\n同事测试人员\n做测试工作的人。\n测试主管和经理\n规划、指导、衡量和管理测试工作及其结果的人。\n开发人员、主管和经理\n执行系统的人。他们收到我们的测试结果，通常必须对我们指出需要改动和改进的发现有所回应。\n数据库和系统架构师\n设计产品的人。他们也收到我们的测试结果，通常必须对我们指出需要改动和改进的发现有所回应。\n营销人员和业务分析师\n决定必须在系统中设计和实现的产品功能及其质量特性的人。\n项目经理\n负责把项目带向令人满意的结局的人。他们必须在质量、日程、功能和预算这些具有不同优先级的东西之间达到一个适当的平衡。\n技术支持和客户服务人员\n支持最终接收、购买我们的产品并从中受益的用户、客户和赞助商的人。\n销售经理、售前工程师和销售人员\n发现客户、决定如何运用我们的系统来满足其需要并确保我们的系统销售有利可图的人。\n决策层、官员和主管\n日常运营或监管这个组织的人。这些角色极其需要，往往随着这个组织是一个公共组织（如政府部门）、非赢利组织（如慈善机构）、公众控股的组织（如上市公司）或私人控股的组织（如合资或独资公司）而各不相同。\n公司股东\n公众或私人控股公司中拥有这家公司的人。\n选举出来的官员或投票选举的人\n公共机构中，通过法律和作决策影响组织的人，以及那些选举他们的人。\n监管人和执法人\n确保组织的人员和系统符合其适用的法律和规程的人。\n用户\n直接使用系统或接收其结果、报告、数据等的人。对在其内部使用该系统的公司，如公用事业或保险公司，其客户是他们系统的间接用户。\n供应商\n提供组件整合到我们系统中的人，或我们系统的用户。\n客户和赞助商 为开发、收购、购买和安装买单的人。\n市民与社会\n住在系统存在和使用社区里的人。\n这份名单并不完全，也不适用于所有项目。\n我得提到另一个要点∶前面名单上的每个利益相关者，也许还有你项目中的其他人，都对你的测试感兴趣。大多数利益相关者通常希望看到你的测试和项目取得成功。不过，并非所有人都一定有这样的想法。\n一些利益相关者是中立的，例如，监管人和执法人一般更关心的是确保你、项目组和该组织遵守法规。如果不遵守规则会带来消极的结果，他们的态度很可能是，如20世纪70 年代的电视连续剧中所说，“如果还没本事，就别急着犯事。”在某些情况下，不遵守规则很可能要犯事的，所以要明白你的义务，跟监管人或执法人发生冲突可不是什么美好的经历。\n此外，一些利益相关方可能怀有敌意，所幸这种情况很少见。在我遇到这些罕见的利益相关者时，我称他们为反利益相关者。例如，一个项目要取代原有的系统，需要涉及继续支持和维护遗留系统的人。这些人可能认为，遗留系统运行得蛮好的，有劳费心。由于组织要求他们参与新的项目，他们的确这样做了，但是消极怠工是家常便饭。这些反利益相关者希望该项目全部失败，就算这失败是由你的测试工作导致的，他们也毫不介意。导致项目的失败也不是一件\u0026quot;美好\u0026quot;的经历。\n走向测试之美的第一步，确定谁是你的测试利益相关者。如果你不知道谁是利益相关者，有些人可能认为你实现了测试之美，但其他人不会这么认为。在我们的咨询工作中，RBCS评审看到不少被忽视的利益相关者对测试团队的工作不满的例子，已审慎考虑过测试的利益相关者的客户有更大的几率实现测试之美，而忽视中立利益相关者和反利益相关者的客户的测试经历则可能很痛苦而\u0026quot;丑陋\u0026quot;。\n《测试之美》 —— Tim Riley / Adam Goucher\n","permalink":"https://varn.cn/tech/%E6%88%91%E4%BB%AC%E4%B8%BA%E8%B0%81%E8%80%8C%E6%B5%8B%E8%AF%95/","summary":"我们首先找出我们想使之满意的那些人，我要用一个宽泛的词“测试利益相关者”来指代这些人。这个词包括但不仅限于测试参与者，包括但不仅限于项目参与","title":"我们为谁而测试"},{"content":"\r","permalink":"https://varn.cn/about/","summary":"","title":"About"}]